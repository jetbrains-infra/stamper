buildscript {
    ext {
        kotlinVersion = '1.1.4'
        springBootVersion = '1.5.4.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.12'
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
    }
}

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
}

dependencies {
    optional "org.springframework.boot:spring-boot-configuration-processor"
}

compileJava.dependsOn(processResources)

group = 'nashikhmin'

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'test-env-runner'
    version = '0.1'
}

version = jar.version
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    jcenter()
}


dependencies {
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: "spring-boot-starter-security", version: '1.5.4.RELEASE'
    compile 'org.springframework.security.oauth:spring-security-oauth2'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb"
    compile group: 'io.github.microutils', name: 'kotlin-logging', version: '1.4.5'
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
    compile group: 'org.webjars', name: 'jquery', version: '3.2.1'
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile 'com.beust:klaxon:0.30'
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: '1.1.3-2'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

task buildImage(type: DockerBuildImage, dependsOn: build) {
    mkdir('build/docker')
    inputDir = file('build/docker')
    tag = 'nashikhmin/test-env-runner:0.1'
    doFirst {
        copy {
            from jar
            into file('build/docker')
        }
        copy {
            from file('src/main/docker/Dockerfile')
            into file('build/docker/')
        }
        copy {
            from file('data/scripts/apply.sh')
            from file('data/scripts/destroy.sh')
            from file('data/scripts/show.sh')
            into 'build/docker/scripts/'
        }
    }
}

task pushImage(type: DockerPushImage, dependsOn: buildImage) {
    imageName = 'nashikhmin/test-env-runner'
    version = 0.1
}