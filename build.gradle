buildscript {
    ext {
        kotlinVersion = '1.1.3-2'
        springBootVersion = '1.5.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}
group = 'nashikhmin'

apply plugin: 'docker'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'test-env-runner'
    version = '0.1'
}

version =  jar.version
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
        copy {
            from '.'
            include 'data/system/**'
            into stageDir
        }
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile group: 'io.github.microutils', name: 'kotlin-logging', version: '1.4.5'
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: '1.1.3-2'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}
